OPTIMAL APPROACH

class Solution {
public:
    vector<int> majorityElement(vector<int>& nums) {
        int cnt1 = 0, cnt2 = 0;
        int ele1 = INT_MIN;
        int ele2 = INT_MIN;
        for(int i=0;i<nums.size();i++){
            if(cnt1 == 0 && ele2 != nums[i]){
                cnt1 = 1;
                ele1 = nums[i];
            }
            else if(cnt2 == 0 && ele1 != nums[i]){
                cnt2 = 1;
                ele2 = nums[i];
            }
            else if (ele1 == nums[i]) cnt1++;
            else if (ele2 == nums[i]) cnt2++;
            else{
                cnt1--,cnt2--;
            }
        }
        //manual check
        vector<int>ls;
        cnt1=0,cnt2=0;
        for(int i=0;i<nums.size();i++){
            if(ele1 == nums[i]){
                cnt1++;
            }    
            if(ele2 == nums[i]){
                cnt2++;
            } 
        }
        int mini = (int)(nums.size()/3)+1;
        if(cnt1 >= mini) ls.push_back(ele1);
        if(cnt2 >= mini) ls.push_back(ele2);
        sort(ls.begin(), ls.end());
        return ls;
    }
};

BETTER SOLUTION

class Solution {
public:
    vector<int> majorityElement(vector<int>& nums) {
        vector<int>ls;
        map<int,int>mpp;
        int n=nums.size();
        int mini = (int)(n/3)+1;
        for(int i=0;i<n;i++){
            mpp[nums[i]]++;
            if(mpp[nums[i]]==mini){
                ls.push_back(nums[i]);
            }
            if(ls.size()==2) break;
        }
        sort(ls.begin(),ls.end());
        return ls;
    }
};

BRUTE FORCE SOLUTION

class Solution {
public:
    vector<int> majorityElement(vector<int>& nums) {
        vector<int>ls;
        int n=nums.size();
        for(int i=0;i<n;i++){
            if(ls.size()==0 || ls[0] != nums[i]){
                int cnt=0;
                for(int j=0;j<n;j++){
                    if(nums[j]==nums[i]){
                        cnt++;
                    }
                }
                if(cnt>n/3){
                    ls.push_back(nums[i]);
                }
            }
            if(ls.size()==2) break;
        }
        return ls;
    }
};
