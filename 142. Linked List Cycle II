 Find the starting point of the Loop/Cycle in LinkedList

OPTIMAL SOLUTION (TORTOISE AND HARE ALGO)

class Solution {
public:
    ListNode *detectCycle(ListNode *head) {
        ListNode* slow = head;
        ListNode* fast = head;
        while(fast != NULL && fast->next != NULL){
            slow = slow->next;
            fast = fast->next->next;
            if(slow == fast){
                slow = head;
                while(slow!=fast){
                    slow = slow->next;
                    fast = fast->next;
                }
                return slow;                
            }
        }
        return NULL;
    }
};

BRUTE FORCE (USING HASHING MAP)

class Solution {
public:
    ListNode *detectCycle(ListNode *head) {
        map<ListNode*, int>mpp;
        ListNode* temp = head;
        while(temp != NULL){
            if(mpp.find(temp) != mpp.end()){
                return temp;
            }
            mpp[temp] = 1;
            temp=temp->next;
        }
        return NULL;
    }
};
