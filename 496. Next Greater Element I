class Solution {
public:
    vector<int> nextGreaterElement(vector<int>& nums1, vector<int>& nums2) {
        unordered_map<int, int> nextGreater;
        stack<int> st;

        // Traverse nums2 from right to left
        for (int i = nums2.size() - 1; i >= 0; i--) {
            int num = nums2[i];

            // Pop all smaller or equal elements
            while (!st.empty() && st.top() <= num) {
                st.pop();
            }

            // Store next greater element
            if (st.empty()) nextGreater[num] = -1;
            else nextGreater[num] = st.top();

            // Push current number to stack
            st.push(num);
        }

        // Prepare result for nums1
        vector<int> res;
        for (int num : nums1) {
            res.push_back(nextGreater[num]);
        }

        return res;
    }
};
