class Solution {
public:
    vector<int> spiralOrder(vector<vector<int>>& matrix) {
        int n=matrix.size();//for rows
        int m=matrix[0].size();//for columns
        int left=0, right=m-1;
        int top=0, bottom=n-1;
        vector<int>ans;
        while(top<=bottom && left<=right){
            //right
            for(int i=left;i<=right;i++){
                ans.push_back(matrix[top][i]);
            }
            top++;
            for(int i=top;i<=bottom;i++){
                ans.push_back(matrix[i][right]);
            }
            right--;
            if(top<=bottom){  //edge cases
                for(int i=right;i>=left;i--){
                ans.push_back(matrix[bottom][i]);
                }
                bottom--;
            }
            if(left<=right){   //edge cases (that still is there any elements)
                for(int i=bottom;i>=top;i--){
                ans.push_back(matrix[i][left]);
                }
                left++;
            }
            
        }
        return ans;
        
    }
};
